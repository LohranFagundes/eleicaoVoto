@model VoteHomWebApp.Models.MultipleVoteSession
@{
    ViewData["Title"] = "Votação Múltipla";
    var electionName = ViewBag.ElectionName as string ?? "Eleição";
    var currentPosition = Model.CurrentPosition;
    var progress = ((float)(Model.CurrentPositionIndex + 1) / Model.AllPositions.Count) * 100;
}

<div class="row">
    <div class="col-12">
        <!-- Progress Bar -->
        <div class="mb-4">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h4 class="text-primary">@electionName</h4>
                <span class="badge bg-primary fs-6">@(Model.CurrentPositionIndex + 1) de @Model.AllPositions.Count</span>
            </div>
            <div class="progress" style="height: 8px;">
                <div class="progress-bar" role="progressbar" style="width: @(progress)%" aria-valuenow="@progress" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>

        <!-- Position Header -->
        <div class="text-center mb-4">
            <h2 class="text-info">Votação para: <strong>@currentPosition?.Name</strong></h2>
            @if (!string.IsNullOrEmpty(currentPosition?.Description))
            {
                <p class="text-muted">@currentPosition.Description</p>
            }
            <p class="text-success">Selecione sua opção de voto para este cargo</p>
        </div>

        <!-- Vote Summary Sidebar (for completed votes) -->
        @if (Model.VoteChoices.Any())
        {
            <div class="card mb-4">
                <div class="card-header bg-success text-white">
                    <i class="fas fa-check-circle me-2"></i>Votos Já Registrados
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var completedVote in Model.VoteChoices.Values)
                        {
                            <div class="col-md-6 mb-2">
                                <small class="text-muted">@completedVote.PositionName:</small><br>
                                <strong class="text-success">
                                    @if (completedVote.IsBlankVote)
                                    {
                                        <span>Voto em Branco</span>
                                    }
                                    else if (completedVote.IsNullVote)
                                    {
                                        <span>Voto Nulo</span>
                                    }
                                    else
                                    {
                                        <span>@completedVote.CandidateName</span>
                                    }
                                </strong>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Voting Form -->
        <form id="multipleVoteForm" asp-controller="Vote" asp-action="SubmitMultiplePositionVote" method="post">
            <input type="hidden" name="positionId" value="@currentPosition?.Id" />
            <input type="hidden" name="candidateId" id="selectedCandidateId" />
            <input type="hidden" name="voteType" id="selectedVoteType" value="candidate" />

            <!-- Candidates -->
            <div class="row">
                @if (currentPosition?.Candidates != null)
                {
                    @foreach (var candidate in currentPosition.Candidates)
                    {
                        <div class="col-md-6 col-lg-4 mb-3">
                            <div class="vote-card candidate-card" onclick="selectCandidate(@candidate.Id, 'candidate')" 
                                 data-candidate-id="@candidate.Id" data-candidate-name="@candidate.Name">
                                <div class="card h-100">
                                    <div class="card-body text-center">
                                        <div class="candidate-photo mb-3">
                                            @if (!string.IsNullOrEmpty(candidate.PhotoBase64))
                                            {
                                                <img src="@candidate.PhotoBase64" alt="@candidate.Name" 
                                                     class="img-fluid rounded-circle candidate-image" 
                                                     style="width: 100px; height: 100px; object-fit: cover;" />
                                            }
                                            else if (!string.IsNullOrEmpty(candidate.PhotoUrl))
                                            {
                                                <img src="@candidate.PhotoUrl" alt="@candidate.Name" 
                                                     class="img-fluid rounded-circle candidate-image" 
                                                     style="width: 100px; height: 100px; object-fit: cover;" 
                                                     onerror="this.style.display='none'; this.nextElementSibling.style.display='block';" />
                                                <div class="candidate-avatar" style="display: none;">
                                                    <i class="fas fa-user fa-3x text-muted"></i>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="candidate-avatar">
                                                    <i class="fas fa-user fa-3x text-muted"></i>
                                                </div>
                                            }
                                        </div>
                                        <h5 class="card-title">@candidate.Name</h5>
                                        @if (!string.IsNullOrEmpty(candidate.Number))
                                        {
                                            <p class="candidate-number"><strong>Número: @candidate.Number</strong></p>
                                        }
                                        @if (!string.IsNullOrEmpty(candidate.Description))
                                        {
                                            <p class="text-muted small">@candidate.Description</p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>

            <!-- Special Vote Options -->
            <div class="row justify-content-center mb-4">
                <div class="col-auto">
                    <button type="button" class="btn btn-outline-secondary vote-special-btn me-2" 
                            onclick="selectCandidate(null, 'blank')" id="blankBtn">
                        <i class="fas fa-square me-2"></i>VOTO EM BRANCO
                    </button>
                    <button type="button" class="btn btn-outline-danger vote-special-btn" 
                            onclick="selectCandidate(null, 'null')" id="nullBtn">
                        <i class="fas fa-ban me-2"></i>VOTO NULO
                    </button>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="text-center mt-4">
                @if (Model.CurrentPositionIndex > 0)
                {
                    <a href="@Url.Action("PreviousPosition")" class="btn btn-outline-secondary btn-lg me-3">
                        <i class="fas fa-arrow-left me-2"></i>Cargo Anterior
                    </a>
                }
                
                <button type="button" id="nextBtn" class="btn btn-primary btn-lg" disabled onclick="showConfirmationModal()">
                    @if (Model.CurrentPositionIndex < Model.AllPositions.Count - 1)
                    {
                        <i class="fas fa-arrow-right me-2"></i><span>Próximo Cargo</span>
                    }
                    else
                    {
                        <i class="fas fa-check me-2"></i><span>Concluir Votação</span>
                    }
                </button>
                
                <a href="@Url.Action("SelectPosition")" class="btn btn-outline-danger btn-lg ms-3">
                    <i class="fas fa-times me-2"></i>Cancelar
                </a>
            </div>
        </form>

        <!-- Timer -->
        <div class="text-center mt-4">
            <div class="vote-timer" id="timer">00:10:00</div>
            <p class="text-muted small">Tempo restante para concluir toda a votação</p>
        </div>
    </div>
</div>

<!-- Confirmation Modal -->
<div class="modal fade" id="confirmVoteModal" tabindex="-1" aria-labelledby="confirmVoteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="confirmVoteModalLabel">
                    <i class="fas fa-check-circle me-2"></i>Confirmar Voto
                </h5>
            </div>
            <div class="modal-body text-center">
                <div class="mb-3">
                    <h6 class="text-muted">Cargo: <strong id="modalPositionName">@currentPosition?.Name</strong></h6>
                </div>
                <div class="alert alert-info" id="voteConfirmationMessage">
                    <!-- Preenchido pelo JavaScript -->
                </div>
                <p class="text-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Atenção:</strong> Após confirmar, você irá para o próximo cargo.
                </p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-success btn-lg me-3" onclick="confirmVote()">
                    <i class="fas fa-check me-2"></i>Confirmar e Continuar
                </button>
                <button type="button" class="btn btn-secondary btn-lg" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Voltar
                </button>
            </div>
        </div>
    </div>
</div>

<div class="fixed-bottom bg-warning text-center py-2">
    <small><strong>Votação Múltipla - Homologação</strong></small>
</div>

@section Scripts {
    <style>
        .vote-special-btn {
            min-width: 180px;
            padding: 8px 16px;
        }
        
        .vote-card.selected {
            border: 3px solid #0d6efd !important;
            transform: scale(1.02);
            box-shadow: 0 4px 8px rgba(13, 110, 253, 0.3);
        }
        
        .vote-special-btn.selected {
            background-color: #0d6efd;
            border-color: #0d6efd;
            color: white;
        }
        
        .btn-outline-secondary.selected {
            background-color: #6c757d;
            border-color: #6c757d;
            color: white;
        }
        
        .btn-outline-danger.selected {
            background-color: #dc3545;
            border-color: #dc3545;
            color: white;
        }

        .progress {
            background-color: #e9ecef;
            border-radius: 4px;
        }

        .progress-bar {
            background: linear-gradient(90deg, #28a745, #20c997);
        }
    </style>
    
    <script>
        let selectedCandidateId = null;
        let selectedVoteType = 'candidate';
        let selectedCandidateName = '';
        let timeLeft = 600; // 10 minutos para toda a votação

        function selectCandidate(candidateId, voteType) {
            // Remove seleção anterior
            document.querySelectorAll('.vote-card').forEach(card => {
                card.classList.remove('selected');
            });
            document.querySelectorAll('.vote-special-btn').forEach(btn => {
                btn.classList.remove('selected');
            });

            // Adiciona seleção atual
            if (voteType === 'candidate') {
                event.currentTarget.classList.add('selected');
                selectedCandidateName = event.currentTarget.getAttribute('data-candidate-name');
            } else if (voteType === 'blank') {
                document.getElementById('blankBtn').classList.add('selected');
                selectedCandidateName = 'Voto em Branco';
            } else if (voteType === 'null') {
                document.getElementById('nullBtn').classList.add('selected');
                selectedCandidateName = 'Voto Nulo';
            }

            selectedCandidateId = candidateId;
            selectedVoteType = voteType;

            document.getElementById('selectedCandidateId').value = candidateId || '';
            document.getElementById('selectedVoteType').value = voteType;
            document.getElementById('nextBtn').disabled = false;

            // Update button text based on whether this is the last position
            const isLastPosition = @(Model.CurrentPositionIndex == Model.AllPositions.Count - 1 ? "true" : "false");
            const buttonText = isLastPosition ? 
                '<i class="fas fa-check me-2"></i>Concluir Votação' : 
                '<i class="fas fa-arrow-right me-2"></i>Próximo Cargo';
            document.querySelector('#nextBtn span').innerHTML = buttonText.replace(/.*>/, '').replace(/<.*/, '');
        }
        
        function showConfirmationModal() {
            let message = '';
            if (selectedVoteType === 'candidate') {
                message = `<strong>Candidato selecionado:</strong><br>${selectedCandidateName}`;
            } else if (selectedVoteType === 'blank') {
                message = `<strong>Você escolheu:</strong><br>Voto em Branco`;
            } else if (selectedVoteType === 'null') {
                message = `<strong>Você escolheu:</strong><br>Voto Nulo`;
            }
            
            document.getElementById('voteConfirmationMessage').innerHTML = message;
            
            const modal = new bootstrap.Modal(document.getElementById('confirmVoteModal'));
            modal.show();
        }
        
        function confirmVote() {
            document.getElementById('multipleVoteForm').submit();
        }

        function updateTimer() {
            const minutes = Math.floor(timeLeft / 60);
            const seconds = timeLeft % 60;
            document.getElementById('timer').textContent = 
                `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

            if (timeLeft > 0) {
                timeLeft--;
                setTimeout(updateTimer, 1000);
            } else {
                alert('Tempo esgotado! A votação será cancelada.');
                window.location.href = '@Url.Action("SelectPosition")';
            }
        }

        // Iniciar timer
        updateTimer();
    </script>
}