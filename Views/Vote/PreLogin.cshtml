@model VoteHomWebApp.Models.ElectionInfo
@{
    ViewData["Title"] = "Sistema de Vota√ß√£o - FUNCORSAN";
    var electionStatus = ViewBag.ElectionStatus as string ?? "info";
    var statusMessage = ViewBag.StatusMessage as string ?? "";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card shadow-lg">
            <div class="card-body text-center py-5">
                <!-- Logo FUNCORSAN -->
                <div class="funcorsan-logo mb-4" style="font-size: 2rem;">
                    <div style="color: #0066cc;">‚óÜ‚óÜ</div>
                    <div style="font-size: 1.5rem; margin-top: 10px;">FUNCORSAN</div>
                    <div style="font-size: 0.9rem; color: #666; font-weight: normal;">Seu futuro mais presente</div>
                </div>

                <h2 class="mb-3">Sistema de Vota√ß√£o</h2>
                <h3 class="mb-4 text-primary">@Model.Name</h3>
                
                <!-- Informa√ß√µes da Elei√ß√£o - Sempre Vis√≠vel -->
                <div class="card mb-4" style="background-color: #f8f9fa;">
                    <div class="card-body">
                        <h5 class="card-title">
                            <i class="fas fa-calendar-alt"></i> Per√≠odo de Vota√ß√£o
                        </h5>
                        <div class="row">
                            <div class="col-md-6">
                                <p class="mb-1"><strong>üìÖ In√≠cio:</strong></p>
                                <p class="fw-bold text-success">@Model.StartDate.ToString("dd/MM/yyyy") √†s @Model.StartDate.ToString("HH:mm")</p>
                            </div>
                            <div class="col-md-6">
                                <p class="mb-1"><strong>üìÖ T√©rmino:</strong></p>
                                <p class="fw-bold text-danger">@Model.EndDate.ToString("dd/MM/yyyy") √†s @Model.EndDate.ToString("HH:mm")</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Status da Elei√ß√£o -->
                @if (!string.IsNullOrEmpty(statusMessage))
                {
                    var alertClass = electionStatus switch 
                    {
                        "not_started" => "alert-warning",
                        "ended" => "alert-danger", 
                        "active" => "alert-success",
                        _ => "alert-info"
                    };
                    var iconClass = electionStatus switch 
                    {
                        "not_started" => "fas fa-clock",
                        "ended" => "fas fa-times-circle", 
                        "active" => "fas fa-check-circle",
                        _ => "fas fa-info-circle"
                    };
                    
                    <div class="alert @alertClass alert-lg mb-4">
                        <i class="@iconClass fa-2x mb-3"></i>
                        <div style="white-space: pre-line; font-size: 1.1em; line-height: 1.6;">@statusMessage</div>
                    </div>
                }

                <!-- Bot√µes Condicionais -->
                <div class="mt-4">
                    @if (electionStatus == "not_started")
                    {
                        <!-- Elei√ß√£o n√£o iniciou - Bot√£o Atualizar -->
                        <button class="btn btn-warning btn-lg mb-3" onclick="location.reload()">
                            <i class="fas fa-sync-alt"></i> Atualizar P√°gina
                        </button>
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i>
                            A p√°gina ser√° atualizada automaticamente quando a elei√ß√£o iniciar.
                        </div>
                    }
                    else if (electionStatus == "active")
                    {
                        <!-- Elei√ß√£o ativa - Bot√£o Login -->
                        <a href="@Url.Action("Login", "Vote")" class="btn btn-success btn-lg mb-3">
                            <i class="fas fa-sign-in-alt"></i> Realizar Login
                        </a>
                        <div class="alert alert-success">
                            <i class="fas fa-vote-yea"></i>
                            <strong>Vota√ß√£o Liberada!</strong> Clique no bot√£o acima para fazer login e votar.
                        </div>
                    }
                    else if (electionStatus == "ended")
                    {
                        <!-- Elei√ß√£o encerrada - Apenas informativo -->
                        <div class="alert alert-secondary">
                            <i class="fas fa-ban"></i>
                            <strong>Vota√ß√£o Encerrada</strong><br>
                            O per√≠odo de vota√ß√£o foi finalizado. N√£o √© mais poss√≠vel votar nesta elei√ß√£o.
                        </div>
                        <button class="btn btn-outline-secondary" onclick="location.reload()">
                            <i class="fas fa-sync-alt"></i> Atualizar P√°gina
                        </button>
                    }
                    else
                    {
                        <!-- Estado desconhecido - Bot√£o gen√©rico -->
                        <button class="btn btn-primary" onclick="location.reload()">
                            <i class="fas fa-sync-alt"></i> Atualizar P√°gina
                        </button>
                    }
                </div>

                <!-- Contador de atualiza√ß√£o autom√°tica -->
                @if (electionStatus == "not_started")
                {
                    <div class="mt-4">
                        <small class="text-muted">
                            <i class="fas fa-clock"></i> 
                            <span id="countdown">Verificando status em 30 segundos...</span>
                        </small>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        @if (electionStatus == "not_started")
        {
            <text>
            // Auto-refresh apenas se a elei√ß√£o n√£o iniciou
            setTimeout(function() {
                location.reload();
            }, 30000);
            
            // Contador regressivo
            let countdown = 30;
            const countdownElement = document.getElementById('countdown');
            
            setInterval(function() {
                countdown--;
                if (countdown > 0) {
                    countdownElement.innerHTML = 'Verificando status em ' + countdown + ' segundos...';
                } else {
                    countdownElement.innerHTML = 'Atualizando...';
                }
            }, 1000);
            </text>
        }
        else
        {
            <text>
            // Para elei√ß√µes ativas ou encerradas, atualizar apenas a cada 5 minutos
            setTimeout(function() {
                location.reload();
            }, 300000); // 5 minutos
            </text>
        }
    </script>
}